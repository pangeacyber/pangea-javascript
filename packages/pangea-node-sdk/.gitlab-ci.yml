.pangea-node-sdk-base:
  before_script:
    - cd packages/pangea-node-sdk
    - yarn install --frozen-lockfile
  cache:
    - key:
        files:
          - packages/pangea-node-sdk/yarn.lock
      paths:
        - packages/pangea-node-sdk/node_modules
  rules:
    - changes:
        - examples/**/*
        - packages/pangea-node-sdk/**/*
      when: on_success

pangea-node-sdk-integration-tests:
  stage: integration_tests
  retry: 2
  variables:
    # Set each service test environment
    SERVICE_AUDIT_ENV: LVE
    SERVICE_AUTHN_ENV: LVE
    SERVICE_AUTHZ_ENV: LVE
    SERVICE_EMBARGO_ENV: LVE
    SERVICE_FILE_SCAN_ENV: LVE
    SERVICE_IP_INTEL_ENV: LVE
    SERVICE_DOMAIN_INTEL_ENV: LVE
    SERVICE_URL_INTEL_ENV: LVE
    SERVICE_FILE_INTEL_ENV: LVE
    SERVICE_USER_INTEL_ENV: LVE
    SERVICE_REDACT_ENV: LVE
    SERVICE_VAULT_ENV: LVE
    NODE_OPTIONS: "--experimental-vm-modules --openssl-legacy-provider"
  before_script:
    - echo $ENV
    - echo $CLOUD
    - echo $TEST
    # Update environment variables
    # Domain
    - export PANGEA_INTEGRATION_DOMAIN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_DOMAIN_${ENV}_${CLOUD})"
    # Tokens
    - export PANGEA_INTEGRATION_TOKEN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_TOKEN_${ENV}_${CLOUD})"
    - export PANGEA_INTEGRATION_VAULT_TOKEN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_VAULT_TOKEN_${ENV}_${CLOUD})"
    - export PANGEA_INTEGRATION_CUSTOM_SCHEMA_TOKEN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_CUSTOM_SCHEMA_TOKEN_${ENV}_${CLOUD})"
    - export PANGEA_INTEGRATION_MULTI_CONFIG_TOKEN_${ENV}="$(eval echo \$PANGEA_INTEGRATION_MULTI_CONFIG_TOKEN_${ENV}_${CLOUD})"
    # Config IDs
    - export PANGEA_AUDIT_CONFIG_ID_1_${ENV}="$(eval echo \$PANGEA_AUDIT_CONFIG_ID_1_${ENV}_${CLOUD})"
    - export PANGEA_AUDIT_CONFIG_ID_2_${ENV}="$(eval echo \$PANGEA_AUDIT_CONFIG_ID_2_${ENV}_${CLOUD})"
    - export PANGEA_AUDIT_CONFIG_ID_3_${ENV}="$(eval echo \$PANGEA_AUDIT_CONFIG_ID_3_${ENV}_${CLOUD})"
    - export PANGEA_REDACT_CONFIG_ID_1_${ENV}="$(eval echo \$PANGEA_REDACT_CONFIG_ID_1_${ENV}_${CLOUD})"
    - export PANGEA_REDACT_CONFIG_ID_2_${ENV}="$(eval echo \$PANGEA_REDACT_CONFIG_ID_2_${ENV}_${CLOUD})"

    - cd packages/pangea-node-sdk
    - yarn install --frozen-lockfile
  cache:
    - key:
        files:
          - packages/pangea-node-sdk/yarn.lock
      paths:
        - packages/pangea-node-sdk/node_modules
  parallel:
    matrix:
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_AUDIT_ENV}
        TEST: audit
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_AUTHN_ENV}
        TEST: authn
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_AUTHZ_ENV}
        TEST: authz
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_EMBARGO_ENV}
        TEST: embargo
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_DOMAIN_INTEL_ENV}
        TEST: intel.domain
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_IP_INTEL_ENV}
        TEST: intel.ip
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_URL_INTEL_ENV}
        TEST: intel.url
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_USER_INTEL_ENV}
        TEST: intel.user
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_FILE_INTEL_ENV}
        TEST: intel.file
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_FILE_SCAN_ENV}
        TEST: file_scan
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_REDACT_ENV}
        TEST: redact
      - CLOUD: [AWS, GCP]
        ENV: ${SERVICE_VAULT_ENV}
        TEST: vault
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - examples/**/*
        - packages/pangea-node-sdk/**/*
  script:
    - npx jest --testPathPattern=tests/integration/${TEST}.test.ts

pangea-node-sdk-build:
  extends: .pangea-node-sdk-base
  stage: build
  script:
    - yarn build
  artifacts:
    paths: ["packages/pangea-node-sdk/dist"]
    when: on_success

pangea-node-sdk-pack:
  extends: .pangea-node-sdk-base
  needs: [pangea-node-sdk-build]
  stage: build
  script:
    - yarn pack
  artifacts:
    paths: ["packages/pangea-node-sdk/pangea-node-sdk-v*.tgz"]
    when: on_success

pangea-node-sdk-lint:
  extends: .pangea-node-sdk-base
  stage: lint
  script:
    - yarn lint

pangea-node-sdk-publish:
  needs: [pangea-node-sdk-build, pangea-node-sdk-pack]
  stage: publish
  cache:
    - key:
        files:
          - packages/pangea-node-sdk/yarn.lock
      paths:
        - packages/pangea-node-sdk/node_modules
  script:
    - apt update -y
    - apt install -y jq

    - bash ./dev/validate_tag.sh $CI_COMMIT_TAG

    - cd packages/pangea-node-sdk
    - yarn install --frozen-lockfile

    - cp ../../scripts/publish.sh .
    - echo "${NPMRC}" > .npmrc && ./publish.sh && rm .npmrc
    - rm publish.sh
  rules:
    - if: $CI_COMMIT_TAG =~ /pangea-node-sdk\/.+/
